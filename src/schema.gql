# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PropertyProperty {
  id: String!
  value: String!
  property: Property!
}

type Property {
  id: String!
  property: [PropertyProperty!]
}

type UserProperty {
  id: Int!
  value: String!
  property: Property!
}

type User {
  id: Int!
  login: String
  hash: String
  group: [User!]
  property: [UserProperty!]
}

type UserQuery {
  list(limit: Int, offset: Int): [User!]!
  item(id: Int!): User
  myself: User
}

type UserMutation {
  """Adding new user"""
  add: User!

  """Deletion existent user"""
  delete: User!

  """Updating existent user"""
  update: User!
}

type UserGroup {
  id: Int!
  name: String!
}

type UserGroupQuery {
  list(limit: Int, offset: Int): [UserGroup!]!
  item(id: String!): UserGroup!
}

type UserGroupMutation {
  """Adding new user group"""
  add: UserGroup!
  delete: UserGroup!
  update: UserGroup!
}

type AuthMutation {
  authByPassword(login: String!, password: String!): User
}

type PropertyQuery {
  list(limit: Int, offset: Int): [Property!]!
  count(limit: Int, offset: Int): Int!
  item(id: String!): Property
}

type PropertyMutation {
  """Adding new property"""
  add(item: PropertyInput!): Property!

  """Deletion existent property"""
  delete(id: [String!]!): [String!]!

  """Updating existent property"""
  update: Property!
}

input PropertyInput {
  id: String!
  property: [PropertyPropertyInput!]
}

input PropertyPropertyInput {
  property: String!
  value: String!
}

type DirectoryProperty {
  id: String!
  value: String!
  property: Property!
}

type Directory {
  id: String!
  property: [DirectoryProperty!]
}

type DirectoryQuery {
  list(limit: Int, offset: Int): [Directory!]!
  count(limit: Int, offset: Int): Int!
  item(id: String!): Directory
}

""""""
type DirectoryMutation {
  """Adding new directory"""
  add(item: DirectoryInputSchema!): Directory!

  """Deletion existent directory"""
  delete(id: [String!]!): [String!]!

  """Updating existent directory"""
  update: Directory!
}

input DirectoryInputSchema {
  id: String!
  property: [DirectoryPropertyInput!]
}

input DirectoryPropertyInput {
  property: String!
  value: String!
}

type Query {
  user: UserQuery!
  userGroup: UserGroupQuery!
  property: PropertyQuery!
  directory: DirectoryQuery!
}

type Mutation {
  user: UserMutation!
  auth: AuthMutation
  userGroup: UserGroupMutation!
  property: PropertyMutation!
  directory: DirectoryMutation!
}